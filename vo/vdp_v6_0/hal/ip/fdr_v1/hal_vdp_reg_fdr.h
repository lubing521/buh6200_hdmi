/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Description: function define
 * Author: image
 * Create: 2019-04-12
 */

#ifndef __HAL_VDP_REG_FDR_H__
#define __HAL_VDP_REG_FDR_H__

#include "hi_reg_vdp.h"

hi_void vdp_fdr_vid_setlmdrawmode(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 lm_draw_mode);
hi_void vdp_fdr_vid_setchmdrawmode(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 chm_draw_mode);
hi_void vdp_fdr_vid_setmrgmutemode(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 mrg_mute_mode);
hi_void vdp_fdr_vid_setfdrckgten(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 fdr_ck_gt_en);
hi_void vdp_fdr_vid_setmrgenable(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 mrg_enable);
hi_void vdp_fdr_vid_setvicapmuteen(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 vicap_mute_en);
hi_void vdp_fdr_vid_setmutereqen(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 mute_req_en);
hi_void vdp_fdr_vid_setmuteen(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 mute_en);
hi_void vdp_fdr_vid_setrmode3d(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 rmode_3d);
hi_void vdp_fdr_vid_setchmcopyen(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 chm_copy_en);
hi_void vdp_fdr_vid_setflipen(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 flip_en);
hi_void vdp_fdr_vid_setprerden(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 pre_rd_en);
hi_void vdp_fdr_vid_setreqldmode(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 req_ld_mode);
hi_void vdp_fdr_vid_setreqinterval(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 req_interval);
hi_void vdp_fdr_vid_setoflmaster(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 ofl_master);
hi_void vdp_fdr_vid_setreqlen(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 req_len);
hi_void vdp_fdr_vid_setreqctrl(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 req_ctrl);
hi_void vdp_fdr_vid_setlmrmode(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 lm_rmode);
hi_void vdp_fdr_vid_setchmrmode(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 chm_rmode);
hi_void vdp_fdr_vid_setdcmpfrmmaxen(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_frm_max_en);
hi_void vdp_fdr_vid_settestpatternen(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 testpattern_en);
hi_void vdp_fdr_vid_setsingleportmode(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 single_port_mode);
hi_void vdp_fdr_vid_setuvorderen(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 uv_order_en);
hi_void vdp_fdr_vid_setdrawpixelmode(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 draw_pixel_mode);
hi_void vdp_fdr_vid_setmuteen(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 mute_en);
hi_void vdp_fdr_vid_setmutey(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 mute_y);
hi_void vdp_fdr_vid_setmutecb(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 mute_cb);
hi_void vdp_fdr_vid_setmutecr(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 mute_cr);
hi_void vdp_fdr_vid_setchmbypass3d(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 chm_bypass_3d);
hi_void vdp_fdr_vid_setlmbypass3d(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 lm_bypass_3d);
hi_void vdp_fdr_vid_setchmbypass2d(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 chm_bypass_2d);
hi_void vdp_fdr_vid_setlmbypass2d(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 lm_bypass_2d);
hi_void vdp_fdr_vid_setyfrmsize(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 y_frm_size);
hi_void vdp_fdr_vid_setcfrmsize(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 c_frm_size);
hi_void vdp_fdr_vid_setdcmptype(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_type);
hi_void vdp_fdr_vid_setdispmode(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 disp_mode);
hi_void vdp_fdr_vid_setfieldtype(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 field_type);
hi_void vdp_fdr_vid_setdatawidth(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 data_width);
hi_void vdp_fdr_vid_setdatafmt(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 data_fmt);
hi_void vdp_fdr_vid_setdatatype(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 data_type);
hi_void vdp_fdr_vid_setsrch(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 src_h);
hi_void vdp_fdr_vid_setsrcw(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 src_w);
hi_void vdp_fdr_vid_setsrccropy(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 src_crop_y);
hi_void vdp_fdr_vid_setsrccropx(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 src_crop_x);
hi_void vdp_fdr_vid_setiresoh(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 ireso_h);
hi_void vdp_fdr_vid_setiresow(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 ireso_w);
hi_void vdp_fdr_vid_setvhdaddrh(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 vhdaddr_h);
hi_void vdp_fdr_vid_setvhdaddrl(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 vhdaddr_l);
hi_void vdp_fdr_vid_setvhdcaddrh(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 vhdcaddr_h);
hi_void vdp_fdr_vid_setvhdcaddrl(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 vhdcaddr_l);
hi_void vdp_fdr_vid_setvhdnaddrh(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 vhdnaddr_h);
hi_void vdp_fdr_vid_setvhdnaddrl(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 vhdnaddr_l);
hi_void vdp_fdr_vid_setvhdncaddrh(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 vhdncaddr_h);
hi_void vdp_fdr_vid_setvhdncaddrl(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 vhdncaddr_l);
hi_void vdp_fdr_vid_sethvhdaddrh(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 h_vhdaddr_h);
hi_void vdp_fdr_vid_sethvhdaddrl(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 h_vhdaddr_l);
hi_void vdp_fdr_vid_sethvhdcaddrh(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 h_vhdcaddr_h);
hi_void vdp_fdr_vid_sethvhdcaddrl(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 h_vhdcaddr_l);
hi_void vdp_fdr_vid_setbvhdaddrh(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 b_vhdaddr_h);
hi_void vdp_fdr_vid_setbvhdaddrl(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 b_vhdaddr_l);
hi_void vdp_fdr_vid_setbvhdcaddrh(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 b_vhdcaddr_h);
hi_void vdp_fdr_vid_setbvhdcaddrl(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 b_vhdcaddr_l);
hi_void vdp_fdr_vid_setchmstride(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 chm_stride);
hi_void vdp_fdr_vid_setlmstride(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 lm_stride);
hi_void vdp_fdr_vid_setchmtilestride(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 chm_tile_stride);
hi_void vdp_fdr_vid_setlmtilestride(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 lm_tile_stride);
hi_void vdp_fdr_vid_setchmheadstride(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 chm_head_stride);
hi_void vdp_fdr_vid_setlmheadstride(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 lm_head_stride);
hi_void vdp_fdr_vid_setbvhdnaddrh(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 b_vhdnaddr_h);
hi_void vdp_fdr_vid_setbvhdnaddrl(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 b_vhdnaddr_l);
hi_void vdp_fdr_vid_setbvhdncaddrh(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 b_vhdncaddr_h);
hi_void vdp_fdr_vid_setbvhdncaddrl(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 b_vhdncaddr_l);
hi_void vdp_fdr_vid_settpmode(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 tp_mode);
hi_void vdp_fdr_vid_settpcolormode(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 tp_color_mode);
hi_void vdp_fdr_vid_settplinew(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 tp_line_w);
hi_void vdp_fdr_vid_settpspeed(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 tp_speed);
hi_void vdp_fdr_vid_settpseed(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 tp_seed);
hi_void vdp_fdr_vid_setfdrpressen(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 fdr_press_en);
hi_void vdp_fdr_vid_setchecksumen(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 checksum_en);
hi_void vdp_fdr_vid_setscopedrdynum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 scope_drdy_num);
hi_void vdp_fdr_vid_setmindrdynum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 min_drdy_num);
hi_void vdp_fdr_vid_setscopenodrdynum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 scope_nodrdy_num);
hi_void vdp_fdr_vid_setminnodrdynum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 min_nodrdy_num);
hi_void vdp_fdr_vid_settunlthd(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 tunl_thd);
hi_void vdp_fdr_vid_settunlinterval(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 tunl_interval);
hi_void vdp_fdr_vid_settunladdrh(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 tunl_addr_h);
hi_void vdp_fdr_vid_settunladdrl(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 tunl_addr_l);
hi_void vdp_fdr_vid_setlchecksum0(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 l_checksum0);
hi_void vdp_fdr_vid_setlchecksum1(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 l_checksum1);
hi_void vdp_fdr_vid_setcchecksum0(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 c_checksum0);
hi_void vdp_fdr_vid_setcchecksum1(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 c_checksum1);
hi_void vdp_fdr_vid_setlfifosta0(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 l_fifosta0);
hi_void vdp_fdr_vid_setlfifototal(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 l_fifo_total);
hi_void vdp_fdr_vid_setcfifosta0(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 c_fifosta0);
hi_void vdp_fdr_vid_setcfifototal(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 c_fifo_total);
hi_void vdp_fdr_vid_setlcurflow(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 l_cur_flow);
hi_void vdp_fdr_vid_setlcursreqtime(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 l_cur_sreq_time);
hi_void vdp_fdr_vid_setccurflow(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 c_cur_flow);
hi_void vdp_fdr_vid_setccursreqtime(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 c_cur_sreq_time);
hi_void vdp_fdr_vid_setllastflow(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 l_last_flow);
hi_void vdp_fdr_vid_setllastsreqtime(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 l_last_sreq_time);
hi_void vdp_fdr_vid_setclastflow(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 c_last_flow);
hi_void vdp_fdr_vid_setclastsreqtime(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 c_last_sreq_time);
hi_void vdp_fdr_vid_setoutheight(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 out_height);
hi_void vdp_fdr_vid_setoutwidth(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 out_width);
hi_void vdp_fdr_vid_setoutfinfo(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 out_finfo);
hi_void vdp_fdr_vid_setylastaddr(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 y_last_addr);
hi_void vdp_fdr_vid_setclastcaddr(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 c_last_caddr);
hi_void vdp_fdr_vid_setworkreadctrl(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 work_read_ctrl);
hi_void vdp_fdr_vid_setworksmmubypass(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 work_smmu_bypass);
hi_void vdp_fdr_vid_setworkyaddr(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 work_y_addr);
hi_void vdp_fdr_vid_setworkcaddr(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 work_c_addr);
hi_void vdp_fdr_vid_setworkynaddr(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 work_y_naddr);
hi_void vdp_fdr_vid_setworkcnaddr(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 work_c_naddr);
hi_void vdp_fdr_vid_setlbusytime(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 l_busy_time);
hi_void vdp_fdr_vid_setlneednordytime(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 l_neednordy_time);
hi_void vdp_fdr_vid_setl2neednordytime(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 l2_neednordy_time);
hi_void vdp_fdr_vid_setcbusytime(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 c_busy_time);
hi_void vdp_fdr_vid_setcneednordytime(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 c_neednordy_time);
hi_void vdp_fdr_vid_setc2neednordytime(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 c2_neednordy_time);
hi_void vdp_fdr_vid_setstridelum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 stride);
hi_void vdp_fdr_vid_setbitdepthlum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 bit_depth);
hi_void vdp_fdr_vid_setstrideenlum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 stride_en);
hi_void vdp_fdr_vid_setmaxmbqplum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 max_mb_qp);
hi_void vdp_fdr_vid_setchromaenlum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 chroma_en);
hi_void vdp_fdr_vid_setcmpmodelum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 cmp_mode);
hi_void vdp_fdr_vid_setislosslesslum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 is_lossless);
hi_void vdp_fdr_vid_seticeenlum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 ice_en);
hi_void vdp_fdr_vid_setframeheightlum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 frame_height);
hi_void vdp_fdr_vid_setframewidthlum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 frame_width);
hi_void vdp_fdr_vid_setadpqpthr0lum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 adpqp_thr0);
hi_void vdp_fdr_vid_setadpqpthr1lum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 adpqp_thr1);
hi_void vdp_fdr_vid_setsmoothdeltabitsthrlum(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 smooth_deltabits_thr);
hi_void vdp_fdr_vid_setconsumelum0(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 consume);
hi_void vdp_fdr_vid_setforgivelum0(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 forgive);
hi_void vdp_fdr_vid_setdcmperrorlum0(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_error);
hi_void vdp_fdr_vid_setdcmpdbglum0(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_dbg);
hi_void vdp_fdr_vid_setconsumelum1(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 consume);
hi_void vdp_fdr_vid_setforgivelum1(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 forgive);
hi_void vdp_fdr_vid_setdcmperrorlum1(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_error);
hi_void vdp_fdr_vid_setdcmpdbglum1(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_dbg);
hi_void vdp_fdr_vid_setconsumelum2(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 consume);
hi_void vdp_fdr_vid_setforgivelum2(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 forgive);
hi_void vdp_fdr_vid_setdcmperrorlum2(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_error);
hi_void vdp_fdr_vid_setdcmpdbglum2(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_dbg);
hi_void vdp_fdr_vid_setconsumelum3(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 consume);
hi_void vdp_fdr_vid_setforgivelum3(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 forgive);
hi_void vdp_fdr_vid_setdcmperrorlum3(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_error);
hi_void vdp_fdr_vid_setdcmpdbglum3(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_dbg);
hi_void vdp_fdr_vid_setstridechm(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 stride);
hi_void vdp_fdr_vid_setbitdepthchm(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 bit_depth);
hi_void vdp_fdr_vid_setstrideenchm(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 stride_en);
hi_void vdp_fdr_vid_setmaxmbqpchm(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 max_mb_qp);
hi_void vdp_fdr_vid_setchromaenchm(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 chroma_en);
hi_void vdp_fdr_vid_setcmpmodechm(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 cmp_mode);
hi_void vdp_fdr_vid_setislosslesschm(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 is_lossless);
hi_void vdp_fdr_vid_seticeenchm(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 ice_en);
hi_void vdp_fdr_vid_setframeheightchm(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 frame_height);
hi_void vdp_fdr_vid_setframewidthchm(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 frame_width);
hi_void vdp_fdr_vid_setadpqpthr0chm(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 adpqp_thr0);
hi_void vdp_fdr_vid_setadpqpthr1chm(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 adpqp_thr1);
hi_void vdp_fdr_vid_setsmoothdeltabitsthrchm(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 smooth_deltabits_thr);
hi_void vdp_fdr_vid_setconsumechm0(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 consume);
hi_void vdp_fdr_vid_setforgivechm0(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 forgive);
hi_void vdp_fdr_vid_setdcmperrorchm0(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_error);
hi_void vdp_fdr_vid_setdcmpdbgchm0(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_dbg);
hi_void vdp_fdr_vid_setconsumechm1(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 consume);
hi_void vdp_fdr_vid_setforgivechm1(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 forgive);
hi_void vdp_fdr_vid_setdcmperrorchm1(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_error);
hi_void vdp_fdr_vid_setdcmpdbgchm1(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_dbg);
hi_void vdp_fdr_vid_setconsumechm2(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 consume);
hi_void vdp_fdr_vid_setforgivechm2(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 forgive);
hi_void vdp_fdr_vid_setdcmperrorchm2(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_error);
hi_void vdp_fdr_vid_setdcmpdbgchm2(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_dbg);
hi_void vdp_fdr_vid_setconsumechm3(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 consume);
hi_void vdp_fdr_vid_setforgivechm3(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 forgive);
hi_void vdp_fdr_vid_setdcmperrorchm3(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_error);
hi_void vdp_fdr_vid_setdcmpdbgchm3(vdp_regs_type *vdp_reg, hi_u32 offset, hi_u32 dcmp_dbg);
hi_void vdp_fdr_vid_setreqbalance(vdp_regs_type *pstreg, hi_u32 offset, hi_u32 lum_req, hi_u32 chm_req);
hi_void vdp_fdr_vid_setdfifoqosthr(vdp_regs_type *pstreg, hi_u32 offset, hi_u32 high_thd, hi_u32 low_thd);
hi_void vdp_fdr_vid_setqosthren(vdp_regs_type *pstreg, hi_u32 offset, hi_u32 thr_en);

#endif

